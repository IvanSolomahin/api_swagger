@startuml
skinparam linetype ortho

' Сущности
entity Client {
  ID                 : SERIAL
  Name               : TEXT
  Phone_Number       : TEXT
  Email              : TEXT
  Password           : CUSTOM TYPE
  Offline            : BOOLEAN
  Workspace_ID       : INT
  Parking_Space_ID   : INT
  Bank_Account       : TEXT
  Created_At         : TIMESTAMP
}

entity workspace {
  ID                 : SERIAL
  Name               : TEXT
  Description        : TEXT
  City               : TEXT
  Cost_Per_Hour      : NUMERIC(10,2)
  Type               : ENUM {desk, meeting_room, lounge}
  Available          : BOOLEAN
}

entity Booking {
  ID                 : SERIAL
  Client_ID          : INT
  Workspace_ID       : INT
  Start_Time         : TIMESTAMP
  End_Time           : TIMESTAMP
  Status             : ENUM {active, cancelled, completed}
}

entity Service {
  ID                 : SERIAL
  Name               : TEXT
  Description        : TEXT
  Type               : ENUM {parking, food, cleaning, equipment}
  Cost               : NUMERIC(10,2)
}

entity Transaction {
  ID                 : SERIAL
  Client_ID          : INT
  Service_ID         : INT
  Amount             : NUMERIC(10,2)
  Status             : ENUM {pending, success, failed}
  Timestamp          : TIMESTAMP
  Saga_ID            : TEXT
}

entity Parking {
  ID                 : SERIAL
  Location           : TEXT
  Total_Slots        : INT
  Available_Slots    : INT
  Cost_Per_Hour      : NUMERIC(10,2)
}

entity AccessControl {
  ID                 : SERIAL
  Client_ID          : INT
  Entry_Timestamp    : TIMESTAMP
  Exit_Timestamp     : TIMESTAMP
  Status             : ENUM {granted, denied}
  Device_ID          : TEXT
}

entity Employee {
  ID                 : SERIAL
  Name               : TEXT
  Role               : ENUM {space_admin, superadmin, support}
  Email              : TEXT
  Phone_Number       : TEXT
  Department         : TEXT
}

entity Request {
  ID                 : SERIAL
  Client_ID          : INT
  Admin_ID           : INT
  Description        : TEXT
  Status             : ENUM {open, in_progress, resolved}
  Created_At         : TIMESTAMP
  Resolved_At        : TIMESTAMP
}

entity Analytics {
  ID                 : SERIAL
  Service_Name       : TEXT
  Metric_Type        : TEXT
  Value              : FLOAT
  Timestamp          : TIMESTAMP
}

entity Dashboard {
  ID                 : SERIAL
  Name               : TEXT
  URL                : TEXT
  Owner_ID           : INT
}

entity SagaLog {
  ID                 : SERIAL
  Saga_ID            : TEXT
  Step               : INT
  Action             : TEXT
  Status             : ENUM {pending, completed, failed}
  Timestamp          : TIMESTAMP
}

entity CompensatingAction {
  ID                 : SERIAL
  Saga_ID            : TEXT
  Action             : TEXT
  Status             : ENUM {pending, executed}
}

' Промежуточные таблицы
entity Client_Instrument {
  Client_ID          : INT
  Instrument_ID      : INT
}

entity Workspace_Instrument {
  Workspace_ID       : INT
  Instrument_ID      : INT
}

entity Room_Speaker {
  Room_ID            : INT
  Speaker_ID         : INT
}

entity Room_Camera {
  Room_ID            : INT
  Camera_ID          : INT
}

' Связи
Client           }o--|| workspace       : "uses"
Client           }o--|| Booking         : "books"
Client           }o--|| Transaction     : "pays_for"
Client           }o--|| AccessControl   : "access_control"
Client           }o--|| Request         : "creates"

workspace        }o--|| Booking         : "booked"
workspace        }o--|| Workspace_Instrument : "has_instruments"
workspace        }o--|| Room            : "contains"

Booking          }o--|| Transaction     : "linked_to"

Service          }o--|| Transaction     : "provided_by"

Parking          }o--|| Transaction     : "paid_for"

Employee         }o--|| Request         : "handles"
Employee         }o--|| Dashboard       : "owns"

Analytics        }o--|| Dashboard       : "source"

SagaLog          }o--|| CompensatingAction : "for"

Client_Instrument }o--|| Instrument     : "uses"
Workspace_Instrument }o--|| Instrument  : "available_in"

Room_Speaker     }o--|| Speaker         : "has"
Room_Camera      }o--|| Camera          : "has"

end @enduml
